import { Component } from '@angular/core';
import { takeUntil } from 'rxjs/operators';
import { ProductsService } from 'src/app/autogenerated/catalog/services';
import { environment } from 'src/environments/environment';
import { PageableResultSearchProductItemDto } from '../../models/pageable-results/pageable-result-search-product-item.dto';
import { NgOnDestroy } from '../../services/ng-on-destroy.service';

@Component({
  selector: 'app-horizontal-nav-bar',
  templateUrl: './horizontal-nav-bar.component.html',
  styleUrls: ['./horizontal-nav-bar.component.scss'],
  providers: [NgOnDestroy],
})
export class HorizontalNavBarComponent {
  constructor(
    private readonly destroyed$: NgOnDestroy,
    private productsService: ProductsService
  ) {}

  public products: PageableResultSearchProductItemDto = {
    data: [],
    page: 0,
    size: 0,
    total: 0,
  };

  public loadItems(value?: string): void {
    value = value?.trim();

    console.log('environment.catalogRoot:', environment.catalogRoot);

    this.productsService
      .searchProducts({ id: '1', name: '2', value, page: 4, size: 5 })
      .pipe(takeUntil(this.destroyed$))
      .subscribe((result) => {
        this.products = new PageableResultSearchProductItemDto(
          result.responseData
        );
      });
  }
}
